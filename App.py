# -*- coding: utf-8 -*-
"""App

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MHUaljpbNf5KVjY4nh5uwsmGMLEPWaQh
"""

import streamlit as st
import pickle
import pandas as pd

# ================================
# ‚úÖ Load the Trained Model
# ================================
with open('best_model_RandomForestClassifier.pkl', 'rb') as file:
    model = pickle.load(file)

# ================================
# ‚úÖ Streamlit App Configuration
# ================================
st.set_page_config(page_title="Heart Disease Predictor", page_icon="‚ù§", layout="centered")

# ================================
# ‚úÖ Sidebar Information
# ================================
st.sidebar.header("About the App ü©∫")
st.sidebar.info(
    """
    This app uses a machine learning model trained on the *UCI Heart Disease dataset*.

    It analyzes 13 key health parameters ‚Äî such as age, cholesterol, blood pressure, and heart rate ‚Äî to predict the likelihood of heart disease.

    ‚öô *Built with:* Python, Scikit-learn, and Streamlit.
    """
)
st.sidebar.write("üë®‚Äçüíª Created by *Abdoulie J. Bah*")
st.sidebar.write("[LinkedIn](https://www.linkedin.com/in/abdoulie-j-bah-b71263244/) | [GitHub](https://github.com/AbdoulieJBah/heart-disease-predictor/tree/main)")

# ================================
# ‚úÖ Page Background + Styling
# ================================
page_bg = """
<style>
[data-testid="stAppViewContainer"] {
    background-image: url('https://cdn.pixabay.com/photo/2018/03/12/19/25/heart-3223201_1280.jpg');
    background-size: cover;
    background-position: center;
    background-attachment: fixed;
    background-repeat: no-repeat;
}
[data-testid="stHeader"] {
    background: rgba(0,0,0,0);
}
[data-testid="stSidebar"] {
    background-color: rgba(255, 255, 255, 0.85);
    backdrop-filter: blur(8px);
}
.pulse {
    color: #b71c1c;
    font-size: 2.5em;
    text-align: center;
    animation: pulse 1.8s infinite;
}
@keyframes pulse {
    0% { transform: scale(1); color: #b71c1c; }
    50% { transform: scale(1.1); color: #f44336; }
    100% { transform: scale(1); color: #b71c1c; }
}
.heart {
    display: inline-block;
    font-size: 2em;
    animation: slowbeat 2.5s infinite;
}
.highrisk {
    color: #e60000;
    animation: fastbeat 0.8s infinite;
}
@keyframes fastbeat {
    0% { transform: scale(1); }
    50% { transform: scale(1.4); }
    100% { transform: scale(1); }
}
@keyframes slowbeat {
    0% { transform: scale(1); }
    50% { transform: scale(1.2); }
    100% { transform: scale(1); }
}
div.stButton > button {
    background-color: #d32f2f;
    color: white;
    border-radius: 10px;
    height: 3em;
    width: 100%;
    border: none;
    font-size: 1em;
    font-weight: bold;
}
div.stButton > button:hover {
    background-color: #f44336;
}
h2, h3 {
    color: #b71c1c;
    text-align: center;
}
</style>
"""
st.markdown(page_bg, unsafe_allow_html=True)

# ================================
# ‚úÖ Title and Intro
# ================================
st.markdown("<h1 class='pulse'>‚ù§ Heart Disease Prediction App</h1>", unsafe_allow_html=True)
st.write("""
This app predicts the *likelihood of heart disease* based on medical parameters
using a trained *Random Forest Machine Learning model*.
""")

# ================================
# ‚úÖ Input Fields
# ================================
st.header("ü©∫ Enter Patient Data")

col1, col2 = st.columns(2)

with col1:
    age = st.number_input("Age", min_value=1, max_value=120, value=45)
    sex = st.selectbox("Sex (1 = Male, 0 = Female)", [1, 0])
    cp = st.selectbox("Chest Pain Type (0‚Äì3)", [0, 1, 2, 3])
    trestbps = st.number_input("Resting Blood Pressure (mm Hg)", min_value=50, max_value=250, value=120)
    chol = st.number_input("Cholesterol (mg/dl)", min_value=100, max_value=600, value=200)
    fbs = st.selectbox("Fasting Blood Sugar > 120 mg/dl (1 = True, 0 = False)", [1, 0])

with col2:
    restecg = st.selectbox("Resting ECG Results (0‚Äì2)", [0, 1, 2])
    thalch = st.number_input("Maximum Heart Rate Achieved", min_value=50, max_value=250, value=150)
    exang = st.selectbox("Exercise-Induced Angina (1 = Yes, 0 = No)", [1, 0])
    oldpeak = st.number_input("ST Depression Induced by Exercise", min_value=0.0, max_value=10.0, value=1.0, step=0.1)
    slope = st.selectbox("Slope of Peak Exercise ST Segment (0‚Äì2)", [0, 1, 2])
    ca = st.selectbox("Number of Major Vessels Colored by Fluoroscopy (0‚Äì3)", [0, 1, 2, 3])
    thal = st.selectbox("Thalassemia (0‚Äì3)", [0, 1, 2, 3])

# ================================
# ‚úÖ Prediction Logic
# ================================
if st.button("üîç Predict"):
    input_data = pd.DataFrame({
        'age': [age],
        'sex': [sex],
        'dataset': [0],
        'cp': [cp],
        'trestbps': [trestbps],
        'chol': [chol],
        'fbs': [fbs],
        'restecg': [restecg],
        'thalch': [thalch],
        'exang': [exang],
        'oldpeak': [oldpeak],
        'slope': [slope],
        'ca': [ca],
        'thal': [thal]
    })

    prediction = model.predict(input_data)[0]
    prediction_proba = model.predict_proba(input_data)[0][1]

    st.subheader("üß† Prediction Result")

    if prediction == 1:
        st.markdown(f"<h3 style='text-align:center;color:#e60000;'>‚ö† High likelihood of heart disease detected.</h3>", unsafe_allow_html=True)
        st.markdown(f"<p style='text-align:center;'>Probability: <b>{prediction_proba:.2f}</b></p>", unsafe_allow_html=True)
        st.markdown("<div class='heart highrisk'>‚ù§</div>", unsafe_allow_html=True)
    else:
        st.markdown(f"<h3 style='text-align:center;color:#1b5e20;'>‚úÖ Low likelihood of heart disease.</h3>", unsafe_allow_html=True)
        st.markdown(f"<p style='text-align:center;'>Probability: <b>{prediction_proba:.2f}</b></p>", unsafe_allow_html=True)
        st.markdown("<div class='heart'>üíì</div>", unsafe_allow_html=True)

# ================================
# ‚úÖ Footer
# ================================
st.markdown(
    """
    <hr>
    <div style='text-align: center; color: grey;'>
        <p>¬© 2025 Abdoulie J. Bah | Machine Learning Engineer</p>
    </div>
    """,
    unsafe_allow_html=True
)

